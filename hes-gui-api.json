{
    "swagger": "2.0",
    "info": {
        "description": "Description of endpoints available for HES-GUI application.",
        "title": "HES-GUI-API documentation"
    },
    "host": "localhost:8084",
    "basePath": "/",
    "tags": [{
            "name": "account-type-controller",
            "description": "Account Type Controller"
        }, {
            "name": "audit-log-controller",
            "description": "Audit Log Controller"
        }, {
            "name": "configurable-parameters-controller",
            "description": "Configurable Parameters Controller"
        }, {
            "name": "data-dashboard-controller",
            "description": "Data Dashboard Controller"
        }, {
            "name": "data-read-controller",
            "description": "Data Read Controller"
        }, {
            "name": "event-logs-controller",
            "description": "Event Logs Controller"
        }, {
            "name": "file-export-controller",
            "description": "File Export Controller"
        }, {
            "name": "file-import-controller",
            "description": "File Import Controller"
        }, {
            "name": "integration-dashboard-controller",
            "description": "Integration Dashboard Controller"
        }, {
            "name": "meter-alarm-controller",
            "description": "Meter Alarm Controller"
        }, {
            "name": "meter-controller",
            "description": "Meter Controller"
        }, {
            "name": "meter-type-controller",
            "description": "Meter Type Controller"
        }, {
            "name": "on-demand-read-controller",
            "description": "On Demand Read Controller"
        }, {
            "name": "ppe-controller",
            "description": "PPE Controller"
        }, {
            "name": "profile-elements-controller",
            "description": "Profile Elements Controller"
        }, {
            "name": "profiles-controller",
            "description": "Profiles Controller"
        }, {
            "name": "register-controller",
            "description": "Register Controller"
        }, {
            "name": "schedule-controller",
            "description": "Schedule Controller"
        }, {
            "name": "schedule-dashboard-controller",
            "description": "Schedule Dashboard Controller"
        }, {
            "name": "scheduled-report-configurations-controller",
            "description": "Scheduled Report Configurations Controller"
        }, {
            "name": "scheduled-report-executions-controller",
            "description": "Scheduled Report Executions Controller"
        }, {
            "name": "sim-controller",
            "description": "SIM Controller"
        }, {
            "name": "special-days-controller",
            "description": "Special Days Controller"
        }, {
            "name": "tariff-controller",
            "description": "Tariff Controller"
        }, {
            "name": "user-controller",
            "description": "User Controller"
        }
    ],
    "paths": {
        "/account-type": {
            "get": {
                "tags": ["account-type-controller"],
                "summary": "Returns all account types available in HES",
                "operationId": "getAccountTypesUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/alarms": {
            "post": {
                "tags": ["meter-alarm-controller"],
                "summary": "Returns alarms in pageable form.",
                "description": "Requires request body specifying time period for which alarms will be returned.",
                "operationId": "getAlarmsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "Represents filters used in HES.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«MeterAlarmDto»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/configurable-parameters": {
            "get": {
                "tags": ["configurable-parameters-controller"],
                "summary": "getConfigurableParameters",
                "operationId": "getConfigurableParametersUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConfigurableParameterDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["configurable-parameters-controller"],
                "summary": "updateConfigurableParameters",
                "operationId": "updateConfigurableParametersUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "configurableParameterDTO",
                        "description": "configurableParameterDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfigurableParameterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurableParameterDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/data/profile/{profileName}": {
            "get": {
                "tags": ["data-dashboard-controller"],
                "summary": "Returns data read completeness information for given profile and time period for all meters",
                "description": "Accepts two parameters startDateTime and endDateTime. Returns bad request if any is missing. In case of time interval e.g. MONTHLY, ANNUALLY passed dates must correspond to current billing period, examples below:    1. MONTHLY (January) -> start: 2020-01-01 00:00:00, end: 2020-01-31 23:59:59   1. MONTHLY (May) -> start: 2020-05-01 00:00:00, end: 2020-05-31 23:59:59   2. ANNUALLY (2020) -> start 2020-01-01 00:00:00, end: 2020-12-31 23:59:59",
                "operationId": "getSchedulesDashboardUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "endDateTime",
                        "in": "query",
                        "description": "endDateTime",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }, {
                        "name": "profileName",
                        "in": "path",
                        "description": "Represents load profile name configured in HES.",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "startDateTime",
                        "in": "query",
                        "description": "startDateTime",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DashboardChart"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/integration": {
            "get": {
                "tags": ["integration-dashboard-controller"],
                "summary": "Returns integration results information for given interface and time period",
                "description": "Accepts three parameters startDateTime, endDateTime and systemName. Returns bad request if any is missing or invalid",
                "operationId": "getIntegrationDashboardUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "endDateTime",
                        "in": "query",
                        "description": "endDateTime",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }, {
                        "name": "startDateTime",
                        "in": "query",
                        "description": "startDateTime",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    }, {
                        "name": "systemName",
                        "in": "query",
                        "description": "systemName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DashboardChart"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/integration/CBO": {
            "post": {
                "tags": ["integration-dashboard-controller"],
                "summary": "Returns CBO synchronization executions summary in form of paged entries.",
                "description": "Accepts two parameters (startDateTime and endDateTime), from which the former is required. In case that the latter is not provided, API will return all synchronization executions.",
                "operationId": "getCBOSynchronizationDetailsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "Represents filters used in HES.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PageResponseWrapper«CboIntegration»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/integration/CBO/{syncId}/meters": {
            "get": {
                "tags": ["integration-dashboard-controller"],
                "summary": "Return list of failed meters affected by given synchronization entry.",
                "description": "In case successful synchronization for all meters affected by sync entry, interface will return empty list",
                "operationId": "getCBOSynchronizationMetersUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "syncId",
                        "in": "path",
                        "description": "syncId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MeterStatusDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/integration/IT4M": {
            "post": {
                "tags": ["integration-dashboard-controller"],
                "summary": "Returns IT4M integration list in form of paged entries.",
                "description": "Accepts two parameters (startDateTime and endDateTime), from which the former is required. In case that the latter is not provided, API will return all IT4M integrations",
                "operationId": "getIT4MIntegrationDetailsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "Represents filters used in HES.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PageResponseWrapper«It4mIntegration»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/integration/SAP": {
            "post": {
                "tags": ["integration-dashboard-controller"],
                "summary": "Returns SAP integration list in form of paged entries.",
                "description": "Accepts two parameters (startDateTime and endDateTime), from which the former is required. In case that the latter is not provided, API will return all SAP integrations",
                "operationId": "getSAPIntegrationDetailsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "Represents filters used in HES.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PageResponseWrapper«SapIntegration»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/schedule": {
            "post": {
                "tags": ["schedule-dashboard-controller"],
                "summary": "Returns schedule executions summary in form of paged entries.",
                "description": "Accepts two parameters (startDateTime and endDateTime), from which the former is required. In case that the latter is not provided, API will return all planned schedule executions summaries, limited by default configurable parameters.",
                "operationId": "getSchedulesDashboardUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "Represents filters used in HES.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«ScheduleExecutionDashboardEntry»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/dashboard/schedule/failure-report/{entryId}": {
            "get": {
                "tags": ["schedule-dashboard-controller"],
                "summary": "Returns details of unsuccessful scheduled operations",
                "description": "Requires id of schedule execution entry which details are requested.",
                "operationId": "getScheduleExecutionFailureReportUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "entryId",
                        "in": "path",
                        "description": "Value represents id of schedule execution entry which details are requested.",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleExecutionFailure"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/read": {
            "post": {
                "tags": ["data-read-controller"],
                "summary": "retrieveProfileReadsMongo",
                "operationId": "retrieveProfileReadsMongoUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "findMeterReadEntriesDto",
                        "description": "findMeterReadEntriesDto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FindMeterReadEntriesDto"
                        }
                    }, {
                        "name": "withEventDescriptions",
                        "in": "query",
                        "description": "withEventDescriptions",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ExtractedReadResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/configurations": {
            "post": {
                "tags": ["scheduled-report-configurations-controller"],
                "summary": "Accepts input data for report configuration",
                "description": "Operation sets new report configuration in HES.",
                "operationId": "addReportConfigurationUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "scheduleConfigurationDTO",
                        "description": "For all types of report configurations, following input data is required: schedule recurrence type, execution details, read details,  meter selection, consisting of static list of meters or dynamic search criteria and scheduled operation type, representing one of available reports. Additionally, non-recurring or recurring details are required depending on schedule recurrence type.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["scheduled-report-configurations-controller"],
                "summary": "Accepts input data for report configuration",
                "description": "Operation updates existing report configuration in HES.",
                "operationId": "updateReportConfigurationUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "updateScheduleConfigurationCommand",
                        "description": "For all types of report configurations, following input data is required: schedule recurrence type, execution details, read details,  meter selection, consisting of static list of meters or dynamic search criteria and scheduled operation type, representing one of available reports. Additionally, non-recurring or recurring details are required depending on schedule recurrence type.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateScheduleConfigurationCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/configurations/current-executions/{report-configuration-name}": {
            "get": {
                "tags": ["scheduled-report-configurations-controller"],
                "summary": "Downloads current execution",
                "description": "Downloaded report execution will be provided in XLSX file.",
                "operationId": "executeConfigurationAndExtractReportUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "report-configuration-name",
                        "in": "path",
                        "description": "Represents a name of report configuration to be executed.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/configurations/profiles": {
            "get": {
                "tags": ["scheduled-report-configurations-controller"],
                "summary": "Returns profiles details",
                "description": "Returned values may be used to determine whether a profile can be included in report generation or not.",
                "operationId": "getProfilesDetailsUsingGET_2",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileDetailsDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/configurations/types": {
            "get": {
                "tags": ["scheduled-report-configurations-controller"],
                "summary": "Returns list of scheduled report configuration types",
                "description": "Returned types has to be used when requesting a list of all report configurations or when adding or updating a report configuration.",
                "operationId": "getReportConfigurationTypesUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/configurations/{report-configuration-name}": {
            "delete": {
                "tags": ["scheduled-report-configurations-controller"],
                "summary": "Deletes report configuration by name",
                "description": "Deletes report configuration by name then returns operation result: report configuration either has been deleted or it had not been found",
                "operationId": "deleteReportConfigurationByNameUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "report-configuration-name",
                        "in": "path",
                        "description": "Represents a name of report configuration to be deleted.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/configurations/{report-configuration-type}": {
            "post": {
                "tags": ["scheduled-report-configurations-controller"],
                "summary": "Returns list of scheduled report configurations in form of paged entries.",
                "description": "Accepts sorting parameters: name, executionType, metersSelectionPattern, id, createdDated, lastExecutionDate.",
                "operationId": "getScheduledReportConfigurationsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "name": "report-configuration-type",
                        "in": "path",
                        "description": "Represents one of report configuration types available in HES.",
                        "required": false,
                        "type": "string"
                    }, {
                        "in": "body",
                        "name": "reportPageRequest",
                        "description": "Represents filters used in HES.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReportPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«ScheduledReportConfigurationDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/executions/{report-configuration-type}": {
            "post": {
                "tags": ["scheduled-report-executions-controller"],
                "summary": "Returns list of scheduled report executions in form of paged entries",
                "description": "Accepts filtering and sorting parameters: reportConfigurationId, executionDate, executionType, metersSelectionPattern, name.",
                "operationId": "getScheduledReportExecutionsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "name": "report-configuration-type",
                        "in": "path",
                        "description": "Represents one of report configuration types available in HES.",
                        "required": false,
                        "type": "string"
                    }, {
                        "in": "body",
                        "name": "reportPageRequest",
                        "description": "Represents filters used in HES.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ReportPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«ScheduledReportExecutionDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/data/reports/executions/{report-id}": {
            "get": {
                "tags": ["scheduled-report-executions-controller"],
                "summary": "Downloads report by id.",
                "description": "Downloaded report will be provided in XLSX file.",
                "operationId": "downloadReportByIdUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "report-id",
                        "in": "path",
                        "description": "Represents id of particular report.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["scheduled-report-executions-controller"],
                "summary": "Deletes report by reportId",
                "description": "Deletes report by reportId then returns operation result: report either has been deleted or it has not been found",
                "operationId": "deleteReportByIdUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "report-id",
                        "in": "path",
                        "description": "report-id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReportOperationResult"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/event-logs": {
            "get": {
                "tags": ["event-logs-controller"],
                "summary": "getEventLogsNames",
                "operationId": "getEventLogsNamesUsingGET_1",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/event-logs/meter-type/{meterTypeKey}": {
            "get": {
                "tags": ["event-logs-controller"],
                "summary": "getEventLogsNames",
                "operationId": "getEventLogsNamesUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "meterTypeKey",
                        "in": "path",
                        "description": "meterTypeKey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file": {
            "post": {
                "tags": ["file-import-controller"],
                "summary": "uploadFile",
                "operationId": "uploadFileUsingPOST",
                "consumes": ["multipart/form-data"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "formData",
                        "name": "fileType",
                        "description": "fileType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "in": "formData",
                        "name": "meterType",
                        "description": "meterType",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "multipartFile",
                        "in": "formData",
                        "description": "multipartFile",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/FileUploadResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file/export/alarms": {
            "post": {
                "tags": ["file-export-controller"],
                "summary": "exportMeterAlarms",
                "operationId": "exportMeterAlarmsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "filterPageRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file/export/dashboard/integration/{systemName}": {
            "post": {
                "tags": ["file-export-controller"],
                "summary": "exportIntegrationDashboard",
                "operationId": "exportIntegrationDashboardUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "filterPageRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }, {
                        "name": "systemName",
                        "in": "path",
                        "description": "systemName",
                        "required": true,
                        "type": "string",
                        "enum": ["CBO", "IT4M", "SAP"]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file/export/dashboard/schedule": {
            "post": {
                "tags": ["file-export-controller"],
                "summary": "getSchedulesDashboard",
                "operationId": "getSchedulesDashboardUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "filterPageRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file/export/dashboard/schedule/failure-report/{entryId}": {
            "get": {
                "tags": ["file-export-controller"],
                "summary": "getSchedulesDashboard",
                "operationId": "getSchedulesDashboardUsingGET_1",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "entryId",
                        "in": "path",
                        "description": "entryId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file/export/meter-details": {
            "post": {
                "tags": ["file-export-controller"],
                "summary": "getMeterDetails",
                "operationId": "getMeterDetailsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "filterPageRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }, {
                        "name": "supportedEventLog",
                        "in": "query",
                        "description": "supportedEventLog",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "supportedProfile",
                        "in": "query",
                        "description": "supportedProfile",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file/export/reads": {
            "post": {
                "tags": ["file-export-controller"],
                "summary": "exportReads",
                "operationId": "exportReadsUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "dto",
                        "description": "dto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/file/history": {
            "get": {
                "tags": ["file-import-controller"],
                "summary": "getFileHistoryWithPagination",
                "operationId": "getFileHistoryWithPaginationUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }, {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }, {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }, {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }, {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }, {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«FileImport»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/log/list": {
            "post": {
                "tags": ["audit-log-controller"],
                "summary": "getLogList",
                "operationId": "getLogListUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "filterPageRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«AuditLogDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter": {
            "post": {
                "tags": ["meter-controller"],
                "summary": "addMeter",
                "operationId": "addMeterUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "meterConfigurationDTO",
                        "description": "meterConfigurationDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MeterConfigurationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["meter-controller"],
                "summary": "updateMeterConfiguration",
                "operationId": "updateMeterConfigurationUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "meterDTO",
                        "description": "meterDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MeterDetailsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter-type": {
            "get": {
                "tags": ["meter-type-controller"],
                "summary": "getMeterTypes",
                "operationId": "getMeterTypesUsingGET_1",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "supportedProfile",
                        "in": "query",
                        "description": "supportedProfile",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/assign-tariff": {
            "post": {
                "tags": ["meter-controller"],
                "summary": "assignTariff",
                "operationId": "assignTariffUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "tariffAssignmentRequest",
                        "description": "tariffAssignmentRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TariffAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/authentication": {
            "get": {
                "tags": ["meter-controller"],
                "summary": "getAuthenticationLevels",
                "operationId": "getAuthenticationLevelsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": ["DEFAULT", "NONE", "LOW", "HIGH", "HIGH_MD5", "HIGH_SHA1", "HIGH_GMAC", "HIGH_SHA256", "HIGH_ECDSA"]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/connection-security": {
            "get": {
                "tags": ["meter-controller"],
                "summary": "getConnectionSecurityLevels",
                "operationId": "getConnectionSecurityLevelsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": ["DEFAULT", "NONE", "AUTHENTICATION", "ENCRYPTION", "AUTHENTICATION_ENCRYPTION"]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/details": {
            "post": {
                "tags": ["meter-controller"],
                "summary": "getMeterDetails",
                "operationId": "getMeterDetailsUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "filterPageRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }, {
                        "name": "supportedEventLog",
                        "in": "query",
                        "description": "supportedEventLog",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "supportedProfile",
                        "in": "query",
                        "description": "supportedProfile",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«MeterDetails»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/interfaces": {
            "get": {
                "tags": ["meter-controller"],
                "summary": "getMeterInterfaceTypes",
                "operationId": "getMeterInterfaceTypesUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/meter-type/{meterTypeKey}/serial-number/{serialNumber}": {
            "get": {
                "tags": ["meter-controller"],
                "summary": "getMeterDetails",
                "operationId": "getMeterDetailsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "meterTypeKey",
                        "in": "path",
                        "description": "meterTypeKey",
                        "required": true,
                        "type": "string",
                        "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                    }, {
                        "name": "serialNumber",
                        "in": "path",
                        "description": "serialNumber",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MeterDetailsDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/read/on-demand/event-log": {
            "post": {
                "tags": ["on-demand-read-controller"],
                "summary": "readEventLog",
                "operationId": "readEventLogUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntryReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnDemandReadResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/read/on-demand/instantaneous": {
            "post": {
                "tags": ["on-demand-read-controller"],
                "summary": "readInstantaneous",
                "operationId": "readInstantaneousUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InstantaneousReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnDemandReadResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/read/on-demand/profile": {
            "post": {
                "tags": ["on-demand-read-controller"],
                "summary": "readProfile",
                "operationId": "readProfileUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntryReadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnDemandReadResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/meter/types": {
            "get": {
                "tags": ["meter-controller"],
                "summary": "getMeterTypes",
                "operationId": "getMeterTypesUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MeterTypeDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/ppe/codes": {
            "get": {
                "tags": ["ppe-controller"],
                "summary": "Returns all PPE codes available in HES",
                "operationId": "getPPECodesUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/ppe/districts": {
            "get": {
                "tags": ["ppe-controller"],
                "summary": "Returns all districts available in HES",
                "operationId": "getMeterDistrictsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/ppe/{ppeCode}": {
            "get": {
                "tags": ["ppe-controller"],
                "summary": "Returns PPE details based on PPE code",
                "operationId": "getPpeDTOByCodeUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "ppeCode",
                        "in": "path",
                        "description": "ppeCode",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PpeDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/profile-elements/meter-type/{meterTypeKey}/profile-labels-identifiers/{profileName}": {
            "get": {
                "tags": ["profile-elements-controller"],
                "summary": "getRegisterAttributeLabelsAndIdentifiers",
                "operationId": "getRegisterAttributeLabelsAndIdentifiersUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "meterTypeKey",
                        "in": "path",
                        "description": "meterTypeKey",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "profileName",
                        "in": "path",
                        "description": "profileName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileElementDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/profiles": {
            "get": {
                "tags": ["profiles-controller"],
                "summary": "getProfilesDetails",
                "operationId": "getProfilesDetailsUsingGET_1",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProfileDetailsDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/profiles/meter-type/{meterTypeKey}": {
            "get": {
                "tags": ["profiles-controller"],
                "summary": "getProfilesDetails",
                "operationId": "getProfilesDetailsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "meterTypeKey",
                        "in": "path",
                        "description": "meterTypeKey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/registers/meter-type/{meterTypeKey}": {
            "get": {
                "tags": ["register-controller"],
                "summary": "getInstantaneousRegisters",
                "operationId": "getInstantaneousRegistersUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "meterTypeKey",
                        "in": "path",
                        "description": "meterTypeKey",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RegisterDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule": {
            "get": {
                "tags": ["schedule-controller"],
                "summary": "Returns short information on schedules available in HES",
                "description": "Returned data presents an array of schedules existing in HES with basic information, consisting of name and scheduled operation type. Scheduled operation type may have one of the following values: READ, WRITE, READ_WRITE, CBO or SAP.",
                "operationId": "getScheduleShortsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduleShortDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["schedule-controller"],
                "summary": "Accepts input data for schedule config",
                "description": "Operation results in config of new schedule in HES.",
                "operationId": "addScheduleUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "scheduleConfigurationDTO",
                        "description": "For all types of schedules, following input data is required: schedule recurrence type, execution details, at least one read or write details and meter selection, consisting of static list of meters or dynamic search criteria. Additionally, non-recurring or recurring details are required depending on schedule recurrence type.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": ["schedule-controller"],
                "summary": "Accepts input data for schedule config",
                "description": "Operation results in config of update schedule in HES.",
                "operationId": "updateScheduleUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "updateScheduleConfigurationCommand",
                        "description": "For all types of schedules, following input data is required: schedule recurrence type, execution details, at least one read or write details and meter selection, consisting of static list of meters or dynamic search criteria. Additionally, non-recurring or recurring details are required depending on schedule recurrence type.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateScheduleConfigurationCommand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/initial-inputs": {
            "get": {
                "tags": ["schedule-controller"],
                "summary": "Returns basic data for schedule config",
                "description": "Returned data presents available meter types, mobile operators and city districts, useful for selecting meters included in the schedule. There is also data related to available profiles and event-logs.",
                "operationId": "getInitialInputsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationInitialInputsDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/meters-count": {
            "get": {
                "tags": ["schedule-controller"],
                "summary": "Returns number of meters filtered through given criteria",
                "description": "Accepts up to three request params, including list of meter types, list of mobile operators and list of districts. Necessary data shall be retrieved through \"/schedule/initial-inputs\". No parameter is required - in case of null parameters, total number of meters will be returned.",
                "operationId": "getMetersCountForGivenConditionsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "districts",
                        "in": "query",
                        "description": "Values should represent districts assigned to meters' PPEs.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }, {
                        "name": "meterTypeKeys",
                        "in": "query",
                        "description": "Values should represent meter types available in HES.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false,
                        "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                    }, {
                        "name": "operators",
                        "in": "query",
                        "description": "Values should represent mobile operators assigned to meters.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/names": {
            "get": {
                "tags": ["schedule-controller"],
                "summary": "Returns names of schedules present in HES",
                "description": "Returned data presents an array of names of schedules existing in HES. The array may be used in order to validate name of new schedule configured by enduser in GUI.",
                "operationId": "getSchedulesNamesUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/type/{scheduleType}/default-config": {
            "get": {
                "tags": ["schedule-controller"],
                "summary": "Returns default schedule config for given schedule type",
                "description": "Three parameters are returned: total duration of schedule [minutes], number of retries and time interval between executions [minutes].Accepted schedule types are: DATA_READ, TARIFF_WRITE",
                "operationId": "getScheduleDefaultConfigurationUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "scheduleType",
                        "in": "path",
                        "description": "scheduleType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleDefaultConfigurationDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/{scheduleName}": {
            "get": {
                "tags": ["schedule-controller"],
                "summary": "Returns detailed information on schedule available in HES",
                "description": "Returned data presents an object of schedule existing in HES with all detailed information. Scheduled operation type may have one of the following values: READ, WRITE, READ_WRITE, CBO or SAP.",
                "operationId": "getScheduleDetailsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "scheduleName",
                        "in": "path",
                        "description": "scheduleName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["schedule-controller"],
                "summary": "Deletes schedule by name",
                "description": "Deletes schedule by name then returns operation result: schedule either has been deleted or it had not been found",
                "operationId": "deleteScheduleByNameUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "scheduleName",
                        "in": "path",
                        "description": "scheduleName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/{scheduleName}/activate": {
            "post": {
                "tags": ["schedule-controller"],
                "summary": "Activates the schedule.",
                "description": "Accepts the schedule name, returns the result of schedule activation attempt.",
                "operationId": "activateUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "name": "scheduleName",
                        "in": "path",
                        "description": "scheduleName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/{scheduleName}/execute": {
            "post": {
                "tags": ["schedule-controller"],
                "summary": "Processes execution of schedule.",
                "description": "Accepts the schedule name, returns a result of manual schedule execution (true or false).",
                "operationId": "executeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "name": "scheduleName",
                        "in": "path",
                        "description": "scheduleName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/schedule/{scheduleName}/suspend": {
            "post": {
                "tags": ["schedule-controller"],
                "summary": "Suspends the schedule.",
                "description": "Accepts the schedule name, returns the result of schedule suspension attempt.",
                "operationId": "suspendUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "name": "scheduleName",
                        "in": "path",
                        "description": "scheduleName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ScheduleConfigurationResult"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/sim/serial-numbers": {
            "get": {
                "tags": ["sim-controller"],
                "summary": "Returns serial numbers of all SIM cards available in HES",
                "operationId": "getSimSerialNumbersUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/sim/{simSerialNumber}": {
            "get": {
                "tags": ["sim-controller"],
                "summary": "Returns SIM details based on SIM serial number",
                "operationId": "getSimDTOUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "simSerialNumber",
                        "in": "path",
                        "description": "simSerialNumber",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimCardDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/special-days": {
            "get": {
                "tags": ["special-days-controller"],
                "summary": "getSpecialDays",
                "operationId": "getSpecialDaysUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SpecialDayDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["special-days-controller"],
                "summary": "setSpecialDaysList",
                "operationId": "setSpecialDaysListUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "specialDayDTOs",
                        "description": "specialDayDTOs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SpecialDayDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/special-days/{ids}": {
            "delete": {
                "tags": ["special-days-controller"],
                "summary": "deleteSpecialDays",
                "operationId": "deleteSpecialDaysUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "ids",
                        "in": "path",
                        "description": "ids",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/tariff": {
            "get": {
                "tags": ["tariff-controller"],
                "summary": "Returns all available tariffs",
                "description": "The structure of returned objects can be used to add new or edit existing tariff.",
                "operationId": "getTariffsUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TariffDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": ["tariff-controller"],
                "summary": "Accepts input data for tariff config",
                "description": "Operation results in config of new tariff in HES.",
                "operationId": "addTariffUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "tariffDTO",
                        "description": "Correct request body must consist of tariffName and at least one: DayProfile, WeekProfile and SeasonProfile. Every DayProfile must consist of at least one DayProfilePeriod, containing profileId, starting time and selectorId. Every WeekProfile must consist of profileId and seven additional numeric objects, for every day of the week. Each object should represent id of day profile defined previously by the user. Every SeasonProfile must consist of at least one numeric object that represents id of week defined previously by the user, as well as profileId and starting date.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TariffDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/tariff/details/{tariffNames}": {
            "get": {
                "tags": ["tariff-controller"],
                "summary": "Returns tariff details",
                "description": "Operation returns available tariff details for given tariff names.",
                "operationId": "getTariffDetailsUsingGET",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "tariffNames",
                        "in": "path",
                        "description": "tariffNames",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TariffDetailsDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/tariff/names": {
            "get": {
                "tags": ["tariff-controller"],
                "summary": "Returns names of all tariffs available in HES.",
                "operationId": "getTariffNamesUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/tariff/tariffication-script": {
            "get": {
                "tags": ["tariff-controller"],
                "summary": "Returns tariffication scripts",
                "description": "Operation returns available tariffication scripts in order to supply drop-down list in tariff config view.",
                "operationId": "findAllUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TarifficationScriptDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/tariff/{tariffName}": {
            "put": {
                "tags": ["tariff-controller"],
                "summary": "Accepts input data for editing tariff",
                "description": "Operation results in edition of new existing in HES.",
                "operationId": "editTariffUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "tariffDTO",
                        "description": "Correct request body must consist of tariffName and at least one: DayProfile, WeekProfile and SeasonProfile. Every DayProfile must consist of at least one DayProfilePeriod, containing profileId, starting time and selectorId. Every WeekProfile must consist of profileId and seven additional numeric objects, for every day of the week. Each object should represent id of day profile defined previously by the user. Every SeasonProfile must consist of at least one numeric object that represents id of week defined previously by the user, as well as profileId and starting date.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TariffDTO"
                        }
                    }, {
                        "name": "tariffName",
                        "in": "path",
                        "description": "Required tariffName path variable for successful execution of edit operation.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["tariff-controller"],
                "summary": "Deletes tariff based on name",
                "description": "Operation deletes tariff according to provided tariff name.",
                "operationId": "deleteTariffUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "tariffName",
                        "in": "path",
                        "description": "Required tariffName path variable for successful execution of delete operation.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        },
        "/user": {
            "post": {
                "tags": ["user-controller"],
                "summary": "Adds an user to HES",
                "operationId": "addUserUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "userDTO",
                        "description": "userDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/user/list": {
            "post": {
                "tags": ["user-controller"],
                "summary": "Returns all users available in HES",
                "operationId": "getUsersUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "in": "body",
                        "name": "filterPageRequest",
                        "description": "filterPageRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«UserDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            }
        },
        "/user/{id}": {
            "put": {
                "tags": ["user-controller"],
                "summary": "Edits an user existing in HES. ID is required as path variable and in request body.",
                "operationId": "editUserUsingPUT",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }, {
                        "in": "body",
                        "name": "userDTO",
                        "description": "userDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": ["user-controller"],
                "summary": "Deactivates an user existing in HES",
                "operationId": "deactivateUserUsingDELETE",
                "produces": ["*/*"],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ConfigurationResponse"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "AccountDetailsDTO": {
            "type": "object",
            "properties": {
                "accountType": {
                    "type": "string",
                    "enum": ["LDAP", "LOCAL"]
                },
                "active": {
                    "type": "boolean"
                }
            },
            "title": "AccountDetailsDTO"
        },
        "AuditLogDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "hesUser": {
                    "type": "string"
                },
                "logDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "objectId": {
                    "type": "string"
                },
                "objectName": {
                    "type": "string"
                },
                "objectType": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": ["INFO", "WARNING", "ERROR"]
                }
            },
            "title": "AuditLogDTO"
        },
        "AuthenticationParamsDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            },
            "title": "AuthenticationParamsDTO"
        },
        "BaseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "BaseResponse"
        },
        "CboIntegration": {
            "type": "object",
            "properties": {
                "entriesCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "failedEntries": {
                    "type": "integer",
                    "format": "int64"
                },
                "meters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeterShortDTO"
                    }
                },
                "metersCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "profile": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": ["Niepoprawny", "Poprawny"]
                },
                "successEntries": {
                    "type": "integer",
                    "format": "int64"
                },
                "successful": {
                    "type": "boolean"
                },
                "syncId": {
                    "type": "integer",
                    "format": "int64"
                },
                "systemName": {
                    "type": "string",
                    "enum": ["CBO", "IT4M", "SAP"]
                }
            },
            "title": "CboIntegration"
        },
        "ConfigurableParameterDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "parameterName": {
                    "type": "string"
                },
                "parameterType": {
                    "type": "string"
                },
                "parameterValue": {
                    "type": "string"
                }
            },
            "title": "ConfigurableParameterDTO"
        },
        "ConfigurationResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "title": "ConfigurationResponse"
        },
        "DashboardChart": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Section"
                    }
                },
                "totalEntries": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "DashboardChart"
        },
        "DayProfileDTO": {
            "type": "object",
            "properties": {
                "dayProfilePeriods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DayProfilePeriodDTO"
                    }
                },
                "profileId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "DayProfileDTO"
        },
        "DayProfilePeriodDTO": {
            "type": "object",
            "properties": {
                "selectorId": {
                    "type": "integer",
                    "format": "int32"
                },
                "startTime": {
                    "$ref": "#/definitions/LocalTime"
                }
            },
            "title": "DayProfilePeriodDTO"
        },
        "EntryReadRequest": {
            "type": "object",
            "properties": {
                "meterTypeKey": {
                    "type": "string"
                },
                "objectName": {
                    "type": "string"
                },
                "readRangeStart": {
                    "type": "string"
                },
                "readRangeStop": {
                    "type": "string"
                },
                "registerAttributeIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serialNumber": {
                    "type": "string"
                }
            },
            "title": "EntryReadRequest"
        },
        "ExecutionDetailsDTO": {
            "type": "object",
            "properties": {
                "executionCron": {
                    "type": "string"
                },
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalDuration": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ExecutionDetailsDTO"
        },
        "ExtractedMeterReadDto": {
            "type": "object",
            "properties": {
                "captureDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "duplicated": {
                    "type": "boolean"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeterReadEntryDto"
                    }
                },
                "entryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string"
                },
                "meterSerialNumber": {
                    "type": "string"
                },
                "meterTypeKey": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "syncInfo": {
                    "$ref": "#/definitions/SyncInfoDto"
                },
                "valid": {
                    "type": "boolean"
                },
                "versionAttributeValue": {
                    "type": "string"
                }
            },
            "title": "ExtractedMeterReadDto"
        },
        "ExtractedReadResponseDto": {
            "type": "object",
            "properties": {
                "readSuccessful": {
                    "type": "boolean"
                },
                "reads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtractedMeterReadDto"
                    }
                }
            },
            "title": "ExtractedReadResponseDto"
        },
        "FailureDetails": {
            "type": "object",
            "properties": {
                "dateOfRecentlyCollectedLoadProfile1Entry": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateOfRecentlyCollectedLoadProfile2Entry": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateOfRecentlyCollectedLoadProfile3Entry": {
                    "type": "string",
                    "format": "date-time"
                },
                "meterType": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "serialNumber": {
                    "type": "string"
                }
            },
            "title": "FailureDetails"
        },
        "File": {
            "type": "object",
            "properties": {
                "absolute": {
                    "type": "boolean"
                },
                "absoluteFile": {
                    "$ref": "#/definitions/File"
                },
                "absolutePath": {
                    "type": "string"
                },
                "canonicalFile": {
                    "$ref": "#/definitions/File"
                },
                "canonicalPath": {
                    "type": "string"
                },
                "directory": {
                    "type": "boolean"
                },
                "file": {
                    "type": "boolean"
                },
                "freeSpace": {
                    "type": "integer",
                    "format": "int64"
                },
                "hidden": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parentFile": {
                    "$ref": "#/definitions/File"
                },
                "path": {
                    "type": "string"
                },
                "totalSpace": {
                    "type": "integer",
                    "format": "int64"
                },
                "usableSpace": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "File"
        },
        "FileError": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string"
                },
                "row": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "FileError"
        },
        "FileImport": {
            "type": "object",
            "properties": {
                "addedEntries": {
                    "type": "integer",
                    "format": "int32"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "skippedEntries": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "totalEntries": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedEntries": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "FileImport"
        },
        "FileUploadResult": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/FileError"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "FileUploadResult"
        },
        "Filter": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "type": "string"
                },
                "operator": {
                    "type": "string",
                    "enum": ["EQUALS", "NOT_EQUALS", "INCLUDE", "SERIES", "NOT_SERIES", "GREATER_THAN", "LESS_THAN", "GREATER_THAN_OR_EQUALS", "LESS_THAN_OR_EQUALS"]
                },
                "sufix": {
                    "type": "string",
                    "enum": ["AND", "OR"]
                },
                "value": {
                    "type": "string"
                }
            },
            "title": "Filter"
        },
        "FilterPageRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Filter"
                    }
                },
                "pageRequest": {
                    "$ref": "#/definitions/SimplePageRequest"
                }
            },
            "title": "FilterPageRequest"
        },
        "FindMeterReadEntriesDto": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string",
                    "format": "date-time"
                },
                "identifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meterSerialNumber": {
                    "type": "string"
                },
                "meterTypeKey": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "to": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "FindMeterReadEntriesDto"
        },
        "InputStream": {
            "type": "object",
            "title": "InputStream"
        },
        "InstantaneousReadRequest": {
            "type": "object",
            "properties": {
                "meterTypeKey": {
                    "type": "string"
                },
                "registerIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serialNumber": {
                    "type": "string"
                }
            },
            "title": "InstantaneousReadRequest"
        },
        "It4mIntegration": {
            "type": "object",
            "properties": {
                "errorDescription": {
                    "type": "string"
                },
                "internalStatus": {
                    "type": "string"
                },
                "meterType": {
                    "type": "string"
                },
                "newTariff": {
                    "type": "string"
                },
                "oldTariff": {
                    "type": "string"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderNumber": {
                    "type": "string"
                },
                "ppeCode": {
                    "type": "string"
                },
                "realizationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "serialNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "It4mIntegration"
        },
        "LocalTime": {
            "type": "object",
            "properties": {
                "hour": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -128,
                    "maximum": 127
                },
                "minute": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -128,
                    "maximum": 127
                },
                "nano": {
                    "type": "integer",
                    "format": "int32"
                },
                "second": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -128,
                    "maximum": 127
                }
            },
            "title": "LocalTime"
        },
        "MeterAlarmDto": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "dateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "meterTypeKey": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "MeterAlarmDto"
        },
        "MeterConfigurationDTO": {
            "type": "object",
            "properties": {
                "dlmsServerAdress": {
                    "type": "string"
                },
                "interfaceType": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "logicalServerAddress": {
                    "type": "string"
                },
                "meterTypeKey": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "portNumber": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                }
            },
            "title": "MeterConfigurationDTO"
        },
        "MeterDetails": {
            "type": "object",
            "properties": {
                "authenticationType": {
                    "type": "string",
                    "enum": ["DEFAULT", "NONE", "LOW", "HIGH", "HIGH_MD5", "HIGH_SHA1", "HIGH_GMAC", "HIGH_SHA256", "HIGH_ECDSA"]
                },
                "cboIncluded": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "clientAddress": {
                    "type": "integer",
                    "format": "int32"
                },
                "defaultAuthenticationType": {
                    "type": "string",
                    "enum": ["DEFAULT", "NONE", "LOW", "HIGH", "HIGH_MD5", "HIGH_SHA1", "HIGH_GMAC", "HIGH_SHA256", "HIGH_ECDSA"]
                },
                "district": {
                    "type": "string"
                },
                "firmware": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "lastCboSyncDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastReadDateProfile1": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastReadDateProfile2": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastReadDateProfile3": {
                    "type": "string",
                    "format": "date-time"
                },
                "meterStatus": {
                    "type": "string",
                    "enum": ["Aktywny", "Kompletny", "Wymaga asocjacji", "Magazyn", "Niekompletny", "Zdemontowany"]
                },
                "meterType": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "mountedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "operator": {
                    "type": "string"
                },
                "postCode": {
                    "type": "string"
                },
                "ppeCode": {
                    "type": "string"
                },
                "propertyNumber": {
                    "type": "string"
                },
                "schedules": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "serverAddress": {
                    "type": "integer",
                    "format": "int32"
                },
                "street": {
                    "type": "string"
                },
                "suiteNumber": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "tariffName": {
                    "type": "string"
                }
            },
            "title": "MeterDetails"
        },
        "MeterDetailsDTO": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "authentication": {
                    "type": "string",
                    "enum": ["DEFAULT", "NONE", "LOW", "HIGH", "HIGH_MD5", "HIGH_SHA1", "HIGH_GMAC", "HIGH_SHA256", "HIGH_ECDSA"]
                },
                "authenticationParamsDTO": {
                    "$ref": "#/definitions/AuthenticationParamsDTO"
                },
                "cboIncluded": {
                    "type": "boolean"
                },
                "clientAddress": {
                    "type": "integer",
                    "format": "int32"
                },
                "connectionSecurity": {
                    "type": "string",
                    "enum": ["DEFAULT", "NONE", "AUTHENTICATION", "ENCRYPTION", "AUTHENTICATION_ENCRYPTION"]
                },
                "dlmsServerAdress": {
                    "type": "integer",
                    "format": "int32"
                },
                "firmware": {
                    "type": "string"
                },
                "interfaceType": {
                    "type": "string",
                    "enum": ["HDLC", "WRAPPER"]
                },
                "logicalServerAddress": {
                    "type": "integer",
                    "format": "int32"
                },
                "meterTypeKey": {
                    "type": "string"
                },
                "meterTypeKeyEnum": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "model": {
                    "type": "string"
                },
                "mountedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "ppeDTO": {
                    "$ref": "#/definitions/PpeDTO"
                },
                "serialNumber": {
                    "type": "string"
                },
                "serverAddress": {
                    "type": "integer",
                    "format": "int32"
                },
                "simCardDTO": {
                    "$ref": "#/definitions/SimCardDTO"
                },
                "unmountedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "MeterDetailsDTO"
        },
        "MeterReadEntryDto": {
            "type": "object",
            "properties": {
                "attrIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "obisCode": {
                    "type": "string"
                },
                "regAttr": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "title": "MeterReadEntryDto"
        },
        "MeterShortDTO": {
            "type": "object",
            "properties": {
                "meterTypeKey": {
                    "type": "string"
                },
                "meterTypeKeyEnum": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "serialNumber": {
                    "type": "string"
                }
            },
            "title": "MeterShortDTO"
        },
        "MeterStatusDTO": {
            "type": "object",
            "properties": {
                "meterStatus": {
                    "type": "string",
                    "enum": ["Aktywny", "Kompletny", "Wymaga asocjacji", "Magazyn", "Niekompletny", "Zdemontowany"]
                },
                "meterTypeKey": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "serialNumber": {
                    "type": "string"
                }
            },
            "title": "MeterStatusDTO"
        },
        "MeterTypeDTO": {
            "type": "object",
            "properties": {
                "acceptsAuthenticationFile": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "MeterTypeDTO"
        },
        "MetersSelectionDetailsDTO": {
            "type": "object",
            "properties": {
                "metersSelectionDynamicCriteriaDTO": {
                    "$ref": "#/definitions/MetersSelectionDynamicCriteriaDTO"
                },
                "staticListOfMeters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeterShortDTO"
                    }
                }
            },
            "title": "MetersSelectionDetailsDTO"
        },
        "MetersSelectionDynamicCriteriaDTO": {
            "type": "object",
            "properties": {
                "districts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meterTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                    }
                },
                "mobileOperators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "MetersSelectionDynamicCriteriaDTO"
        },
        "NonRecurringDetailsDTO": {
            "type": "object",
            "properties": {
                "offsetHours": {
                    "type": "integer",
                    "format": "int32"
                },
                "readRangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "readRangeStop": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "NonRecurringDetailsDTO"
        },
        "OnDemandReadResponseDto": {
            "type": "object",
            "properties": {
                "readSuccessful": {
                    "type": "boolean"
                },
                "reads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VersionedSaveMeterReadDto"
                    }
                }
            },
            "title": "OnDemandReadResponseDto"
        },
        "PageResponseWrapper«CboIntegration»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CboIntegration"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PageResponseWrapper«CboIntegration»"
        },
        "PageResponseWrapper«It4mIntegration»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/It4mIntegration"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PageResponseWrapper«It4mIntegration»"
        },
        "PageResponseWrapper«SapIntegration»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SapIntegration"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PageResponseWrapper«SapIntegration»"
        },
        "Pageable": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int64"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "paged": {
                    "type": "boolean"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "unpaged": {
                    "type": "boolean"
                }
            },
            "title": "Pageable"
        },
        "Page«AuditLogDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuditLogDTO"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«AuditLogDTO»"
        },
        "Page«FileImport»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileImport"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«FileImport»"
        },
        "Page«MeterAlarmDto»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeterAlarmDto"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«MeterAlarmDto»"
        },
        "Page«MeterDetails»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeterDetails"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«MeterDetails»"
        },
        "Page«ScheduleExecutionDashboardEntry»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleExecutionDashboardEntry"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«ScheduleExecutionDashboardEntry»"
        },
        "Page«ScheduledReportConfigurationDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledReportConfigurationDTO"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«ScheduledReportConfigurationDTO»"
        },
        "Page«ScheduledReportExecutionDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledReportExecutionDTO"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«ScheduledReportExecutionDTO»"
        },
        "Page«UserDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserDTO"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«UserDTO»"
        },
        "PersonalDetailsDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            },
            "title": "PersonalDetailsDTO"
        },
        "PpeDTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "meterDTOs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SapMeterDTO"
                    }
                },
                "postCode": {
                    "type": "string"
                },
                "ppeCode": {
                    "type": "string"
                },
                "propertyNumber": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "suiteNumber": {
                    "type": "string"
                },
                "tariffCode": {
                    "type": "string"
                }
            },
            "title": "PpeDTO"
        },
        "ProfileDetailsDto": {
            "type": "object",
            "properties": {
                "businessName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reported": {
                    "type": "boolean"
                }
            },
            "title": "ProfileDetailsDto"
        },
        "ProfileElementDTO": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "ProfileElementDTO"
        },
        "RecurringDetailsDTO": {
            "type": "object",
            "properties": {
                "offsetHours": {
                    "type": "integer",
                    "format": "int32"
                },
                "validFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "validTo": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "RecurringDetailsDTO"
        },
        "RegisterDTO": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "RegisterDTO"
        },
        "ReportOperationResult": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/ScheduleError"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "ReportOperationResult"
        },
        "ReportPageRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Filter"
                    }
                },
                "pageRequest": {
                    "$ref": "#/definitions/SimplePageRequest"
                }
            },
            "title": "ReportPageRequest"
        },
        "ReportRequestDTO": {
            "type": "object",
            "properties": {
                "meters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportRequestMeterDTO"
                    }
                },
                "reportFormat": {
                    "type": "string",
                    "enum": ["CSV", "XLSX"]
                },
                "reportType": {
                    "type": "string"
                }
            },
            "title": "ReportRequestDTO"
        },
        "ReportRequestMeterDTO": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "identifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meterSerialNumber": {
                    "type": "string"
                },
                "meterType": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "objectName": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            },
            "title": "ReportRequestMeterDTO"
        },
        "Resource": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "file": {
                    "$ref": "#/definitions/File"
                },
                "filename": {
                    "type": "string"
                },
                "inputStream": {
                    "$ref": "#/definitions/InputStream"
                },
                "open": {
                    "type": "boolean"
                },
                "readable": {
                    "type": "boolean"
                },
                "uri": {
                    "$ref": "#/definitions/URI"
                },
                "url": {
                    "$ref": "#/definitions/URL"
                }
            },
            "title": "Resource"
        },
        "SapIntegration": {
            "type": "object",
            "properties": {
                "affectedMeters": {
                    "type": "string"
                },
                "errorDescription": {
                    "type": "string"
                },
                "failedEntries": {
                    "type": "integer",
                    "format": "int64"
                },
                "metersCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "ppe": {
                    "type": "string"
                },
                "ppeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "successEntries": {
                    "type": "integer",
                    "format": "int64"
                },
                "systemName": {
                    "type": "string",
                    "enum": ["CBO", "IT4M", "SAP"]
                }
            },
            "title": "SapIntegration"
        },
        "SapMeterDTO": {
            "type": "object",
            "properties": {
                "meterTypeKey": {
                    "type": "string"
                },
                "mountDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "ppeCode": {
                    "type": "string"
                },
                "sapActionEnum": {
                    "type": "string",
                    "enum": ["MOUNT", "UNMOUNT"]
                },
                "serialNumber": {
                    "type": "string"
                },
                "simCardDTO": {
                    "$ref": "#/definitions/SimCardDTO"
                },
                "unmountDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "SapMeterDTO"
        },
        "ScheduleConfigurationDTO": {
            "type": "object",
            "properties": {
                "executionDetailsDTO": {
                    "$ref": "#/definitions/ExecutionDetailsDTO"
                },
                "metersSelectionDetailsDTO": {
                    "$ref": "#/definitions/MetersSelectionDetailsDTO"
                },
                "name": {
                    "type": "string"
                },
                "nonRecurringDetailsDTO": {
                    "$ref": "#/definitions/NonRecurringDetailsDTO"
                },
                "recurringDetailsDTO": {
                    "$ref": "#/definitions/RecurringDetailsDTO"
                },
                "scheduleType": {
                    "type": "string",
                    "enum": ["RECURRING", "NON_RECURRING"]
                },
                "scheduledEventLogReadDetailsDTOs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledEventLogReadDetailsDTO"
                    }
                },
                "scheduledInstantaneousReadDetailsDTOs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledInstantaneousReadDetailsDTO"
                    }
                },
                "scheduledOperationType": {
                    "type": "string",
                    "enum": ["READ", "WRITE", "READ_WRITE", "CBO", "SAP", "IT4M_WRITE", "OTHER", "PROFILE_DATA_REPORT", "MISSING_DATA_REPORT"]
                },
                "scheduledProfileReadDetailsDTOs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduledProfileReadDetailsDTO"
                    }
                },
                "scheduledTariffWriteDetailsDTO": {
                    "$ref": "#/definitions/ScheduledTariffWriteDetailsDTO"
                }
            },
            "title": "ScheduleConfigurationDTO"
        },
        "ScheduleConfigurationInitialInputsDTO": {
            "type": "object",
            "properties": {
                "eventLogTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "existingSchedulesNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meterDistricts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "meterTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mobileOperators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "profileTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scheduleTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tariffNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "ScheduleConfigurationInitialInputsDTO"
        },
        "ScheduleConfigurationResult": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/ScheduleError"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "ScheduleConfigurationResult"
        },
        "ScheduleDefaultConfigurationDto": {
            "type": "object",
            "properties": {
                "retryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryInterval": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalDuration": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ScheduleDefaultConfigurationDto"
        },
        "ScheduleError": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            },
            "title": "ScheduleError"
        },
        "ScheduleExecutionDashboardEntry": {
            "type": "object",
            "properties": {
                "affectedMetersCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "endDateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "entryId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "numberOfAwaitingMeterOperations": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfFailedMeterOperations": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfSuccessfullyProcessedMeterOperations": {
                    "type": "integer",
                    "format": "int32"
                },
                "scheduleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "startDateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "ScheduleExecutionDashboardEntry"
        },
        "ScheduleExecutionFailure": {
            "type": "object",
            "properties": {
                "failureDetailsList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FailureDetails"
                    }
                },
                "scheduleName": {
                    "type": "string"
                }
            },
            "title": "ScheduleExecutionFailure"
        },
        "ScheduleShortDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "numberOfScheduledMeters": {
                    "type": "integer",
                    "format": "int32"
                },
                "scheduledOperationType": {
                    "type": "string",
                    "enum": ["READ", "WRITE", "READ_WRITE", "CBO", "SAP", "IT4M_WRITE", "OTHER", "PROFILE_DATA_REPORT", "MISSING_DATA_REPORT"]
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "ScheduleShortDTO"
        },
        "ScheduledEventLogReadDetailsDTO": {
            "type": "object",
            "properties": {
                "eventLogType": {
                    "type": "string",
                    "enum": ["EVENT_LOG_1", "EVENT_LOG_2"]
                },
                "identifiersMeterType": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                }
            },
            "title": "ScheduledEventLogReadDetailsDTO"
        },
        "ScheduledInstantaneousReadDetailsDTO": {
            "type": "object",
            "properties": {
                "identifiersMeterType": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "registerIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "ScheduledInstantaneousReadDetailsDTO"
        },
        "ScheduledProfileReadDetailsDTO": {
            "type": "object",
            "properties": {
                "identifiersMeterType": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "profileType": {
                    "type": "string"
                },
                "registerAttributesIdentifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "ScheduledProfileReadDetailsDTO"
        },
        "ScheduledReportConfigurationDTO": {
            "type": "object",
            "properties": {
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "executionType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastExecutionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "metersSelectionPattern": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scheduledOperationType": {
                    "type": "string",
                    "enum": ["READ", "WRITE", "READ_WRITE", "CBO", "SAP", "IT4M_WRITE", "OTHER", "PROFILE_DATA_REPORT", "MISSING_DATA_REPORT"]
                }
            },
            "title": "ScheduledReportConfigurationDTO"
        },
        "ScheduledReportExecutionDTO": {
            "type": "object",
            "properties": {
                "executionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "executionType": {
                    "type": "string"
                },
                "metersSelectionPattern": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reportConfigurationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reportId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ScheduledReportExecutionDTO"
        },
        "ScheduledTariffWriteDetailsDTO": {
            "type": "object",
            "properties": {
                "activationDateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "identifiersMeterType": {
                    "type": "string",
                    "enum": ["LG_E570", "MCS_301", "DUMMY", "SMA", "GAMAG3G", "AD13A"]
                },
                "tariffName": {
                    "type": "string"
                }
            },
            "title": "ScheduledTariffWriteDetailsDTO"
        },
        "SeasonProfileDTO": {
            "type": "object",
            "properties": {
                "profileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "weekProfileId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "SeasonProfileDTO"
        },
        "Section": {
            "type": "object",
            "properties": {
                "entriesCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "Section"
        },
        "SimCardDTO": {
            "type": "object",
            "properties": {
                "ipAddress": {
                    "type": "string"
                },
                "msisdn": {
                    "type": "integer",
                    "format": "int32"
                },
                "operator": {
                    "type": "string"
                },
                "portNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "serialNumber": {
                    "type": "string"
                }
            },
            "title": "SimCardDTO"
        },
        "SimplePageRequest": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "sortParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SortParameter"
                    }
                }
            },
            "title": "SimplePageRequest"
        },
        "Sort": {
            "type": "object",
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "sorted": {
                    "type": "boolean"
                },
                "unsorted": {
                    "type": "boolean"
                }
            },
            "title": "Sort"
        },
        "SortParameter": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "enum": ["ASC", "DESC"]
                },
                "property": {
                    "type": "string"
                }
            },
            "title": "SortParameter"
        },
        "SpecialDayDTO": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "SpecialDayDTO"
        },
        "SyncInfoDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "syncDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "synced": {
                    "type": "boolean"
                },
                "tries": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "SyncInfoDto"
        },
        "TariffAssignmentRequest": {
            "type": "object",
            "properties": {
                "meterTypeKey": {
                    "type": "string"
                },
                "serialNumber": {
                    "type": "string"
                },
                "tariffName": {
                    "type": "string"
                }
            },
            "title": "TariffAssignmentRequest"
        },
        "TariffDTO": {
            "type": "object",
            "properties": {
                "dayProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DayProfileDTO"
                    }
                },
                "seasonProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeasonProfileDTO"
                    }
                },
                "specialDayProfileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tariffName": {
                    "type": "string"
                },
                "weekProfiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WeekProfileDTO"
                    }
                }
            },
            "title": "TariffDTO"
        },
        "TariffDetailsDTO": {
            "type": "object",
            "properties": {
                "connectedMeters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeterShortDTO"
                    }
                },
                "connectedSchedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleShortDTO"
                    }
                },
                "exists": {
                    "type": "boolean"
                },
                "tariffName": {
                    "type": "string"
                }
            },
            "title": "TariffDetailsDTO"
        },
        "TarifficationScriptDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                }
            },
            "title": "TarifficationScriptDTO"
        },
        "URI": {
            "type": "object",
            "properties": {
                "absolute": {
                    "type": "boolean"
                },
                "authority": {
                    "type": "string"
                },
                "fragment": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "opaque": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "query": {
                    "type": "string"
                },
                "rawAuthority": {
                    "type": "string"
                },
                "rawFragment": {
                    "type": "string"
                },
                "rawPath": {
                    "type": "string"
                },
                "rawQuery": {
                    "type": "string"
                },
                "rawSchemeSpecificPart": {
                    "type": "string"
                },
                "rawUserInfo": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                },
                "schemeSpecificPart": {
                    "type": "string"
                },
                "userInfo": {
                    "type": "string"
                }
            },
            "title": "URI"
        },
        "URL": {
            "type": "object",
            "properties": {
                "authority": {
                    "type": "string"
                },
                "content": {
                    "type": "object"
                },
                "defaultPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "file": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "format": "int32"
                },
                "protocol": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "userInfo": {
                    "type": "string"
                }
            },
            "title": "URL"
        },
        "UpdateScheduleConfigurationCommand": {
            "type": "object",
            "properties": {
                "oldName": {
                    "type": "string"
                },
                "scheduleConfigurationDTO": {
                    "$ref": "#/definitions/ScheduleConfigurationDTO"
                }
            },
            "title": "UpdateScheduleConfigurationCommand"
        },
        "UserDTO": {
            "type": "object",
            "properties": {
                "accountDetails": {
                    "$ref": "#/definitions/AccountDetailsDTO"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "personalDetails": {
                    "$ref": "#/definitions/PersonalDetailsDTO"
                }
            },
            "title": "UserDTO"
        },
        "VersionedSaveMeterReadDto": {
            "type": "object",
            "properties": {
                "captureDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "duplicated": {
                    "type": "boolean"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeterReadEntryDto"
                    }
                },
                "entriesRead": {
                    "type": "boolean"
                },
                "entryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "eventLogRead": {
                    "type": "boolean"
                },
                "meterCboIncluded": {
                    "type": "boolean"
                },
                "meterSerialNumber": {
                    "type": "string"
                },
                "meterTypeKey": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "profileRead": {
                    "type": "boolean"
                },
                "serialNumber": {
                    "type": "string"
                },
                "versionAttributeValue": {
                    "type": "string"
                }
            },
            "title": "VersionedSaveMeterReadDto"
        },
        "WeekProfileDTO": {
            "type": "object",
            "properties": {
                "fridayProfileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "mondayProfileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "profileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "saturdayProfileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sundayProfileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "thursdayProfileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tuesdayProfileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "wednesdayProfileId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "WeekProfileDTO"
        }
    }
}